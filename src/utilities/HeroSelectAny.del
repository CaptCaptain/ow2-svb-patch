globalvar define _extendedGlobalCollection;
globalvar define _arrayBuilder;
globalvar define _classIndexes;
globalvar define _objectVariable_0;
globalvar define _objectVariable_1;
globalvar define _objectVariable_2;
globalvar define _objectVariable_3;
globalvar define _objectVariable_4;
globalvar define _objectVariable_5;
globalvar define _objectVariable_6;
globalvar define _objectVariable_7;
globalvar define heroesSorted;
globalvar define TankHeroes;
globalvar define DamageHeroes;
globalvar define SupportHeroes;
globalvar define camPos;
globalvar define camFacing;
globalvar define liteMode;
globalvar define AllCursors;
globalvar define _func_recursiveContinue;
globalvar define cursorsToUpdate;
playervar define _extendedPlayerCollection;
playervar define isInHeroSelect;
playervar define cursor;
playervar define selectionIndex;

rule: "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒【Hero Select Anywhere by Josbird】▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒"
{
}

rule: "Initial Global"
{
    _classIndexes[1000] = 0;
    _classIndexes[0] = -1;
    heroesSorted = [];
    camPos = Vector(300, 300, 300);
    camFacing = Vector(0.707, 0, 0.707);
    liteMode = 1 == 1;
    AllCursors = [];
    _func_recursiveContinue = [];
}

rule: "Initial Player"
Event.OngoingPlayer
{
    AbortIf(IsDummyBot());
    isInHeroSelect = false;
    selectionIndex = -1;
}

rule: "[HeroSelectAnywhere.del] Hold reload to toggle hero select"
Event.OngoingPlayer
if (IsButtonHeld(EventPlayer(), Button.Reload) == true)
{
    AbortIf(IsDummyBot());
    Wait(0.3, WaitBehavior.AbortWhenFalse);
    isInHeroSelect = !isInHeroSelect;
}

rule: "[HeroSelectAnywhere.del] Press interact to exit hero select"
Event.OngoingPlayer
if (isInHeroSelect == true)
if (IsButtonHeld(EventPlayer(), Button.Interact) == true)
{
    AbortIf(IsDummyBot());
    isInHeroSelect = false;
}

rule: "[HeroSelectAnywhere.del] Pull out of hero select on death"
Event.OnDeath
if (isInHeroSelect == true)
{
    AbortIf(IsDummyBot());
    # test comment
    isInHeroSelect = false;
}

rule: "[HeroSelectAnywhere.del] Open hero select"
Event.OngoingPlayer
if (isInHeroSelect == true)
{
    AbortIf(IsDummyBot());
    DisableHeroHud(EventPlayer());
    DisableGameModeHud(EventPlayer());
    CancelPrimaryAction(EventPlayer());
    SetStatus(EventPlayer(), null, Status.Rooted, 9999);
    SetStatus(EventPlayer(), null, Status.Hacked, 9999);
    StartCamera(EventPlayer(), camPos, camPos + camFacing, 0);
    if (!liteMode)
    {
        selectionIndex = HeroOf(EventPlayer()) == null ? RandomValueInArray(MappedArray(AllowedHeroes(EventPlayer()), ArrayContains(AllowedHeroes(EventPlayer()), ArrayElement()))) : IndexOfArrayValue(heroesSorted, HeroOf(EventPlayer()));
    }
    MinWait();
    _extendedPlayerCollection[0] = IndexOfArrayValue(_classIndexes, 0);
    _classIndexes[FirstOf(_extendedPlayerCollection)] = 3;
    _objectVariable_2[FirstOf(_extendedPlayerCollection)] = 0;
    _objectVariable_3[FirstOf(_extendedPlayerCollection)] = 0;
    _objectVariable_0[FirstOf(_extendedPlayerCollection)] = EventPlayer();
    _objectVariable_1[FirstOf(_extendedPlayerCollection)] = FacingDirectionOf(EventPlayer());
    SetAimSpeed(EventPlayer(), 15);
    SetPrimaryFireEnabled(EventPlayer(), false);
    SetSecondaryFireEnabled(EventPlayer(), false);
    _objectVariable_4[FirstOf(_extendedPlayerCollection)] = -3.75;
    _objectVariable_5[FirstOf(_extendedPlayerCollection)] = 3.75;
    _objectVariable_6[FirstOf(_extendedPlayerCollection)] = -2;
    _objectVariable_7[FirstOf(_extendedPlayerCollection)] = 2;
    ModifyVariable(AllCursors, Operation.AppendToArray, FirstOf(_extendedPlayerCollection));
    cursor = FirstOf(_extendedPlayerCollection);
}

rule: "[HeroSelectAnywhere.del] Close hero select"
Event.OngoingPlayer
if (cursor != null)
if (!isInHeroSelect == true)
{
    AbortIf(IsDummyBot());
    EnableHeroHud(EventPlayer());
    EnableGameModeHud(EventPlayer());
    ClearStatus(EventPlayer(), Status.Rooted);
    ClearStatus(EventPlayer(), Status.Hacked);
    StopCamera(EventPlayer());
    SetAimSpeed(_objectVariable_0[cursor], 100);
    SetPrimaryFireEnabled(_objectVariable_0[cursor], true);
    SetSecondaryFireEnabled(_objectVariable_0[cursor], true);
    _classIndexes[cursor] = 0;
    _objectVariable_0[cursor] = 0;
    _objectVariable_1[cursor] = 0;
    _objectVariable_2[cursor] = 0;
    _objectVariable_3[cursor] = 0;
    _objectVariable_4[cursor] = 0;
    _objectVariable_5[cursor] = 0;
    _objectVariable_6[cursor] = 0;
    _objectVariable_7[cursor] = 0;
    cursor = null;
}

void switchToHero() "[HeroSelectAnywhere.del] (Subroutine) Switch hero"
{
    ForcePlayerHero(EventPlayer(), _extendedGlobalCollection[1]);
    if (!false)
    {
        StopForcingHero(EventPlayer());
    }
}

rule: "[HeroSelectAnywhere.del] Click logic"
Event.OngoingPlayer
if (isInHeroSelect == true)
if (IsButtonHeld(EventPlayer(), Button.PrimaryFire) == true)
{
    AbortIf(IsDummyBot());
    if (!liteMode)
    {
        if (Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) >= -3.5 && Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) <= 3.5 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) >= -1 - 7 / CountOf(heroesSorted) / 2 * 1.5 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) <= -1 + 7 / CountOf(heroesSorted) / 2 * 1.5 && ArrayContains(AllowedHeroes(EventPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]))
        {
            selectionIndex = RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down);
            PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, Color.White, camPos + camFacing, 75);
            WaitUntil(!IsButtonHeld(EventPlayer(), Button.PrimaryFire), 0.25);
            if (IsButtonHeld(EventPlayer(), Button.PrimaryFire))
            {
                Abort();
            }
            WaitUntil(IsButtonHeld(EventPlayer(), Button.PrimaryFire), 0.25);
            if (!IsButtonHeld(EventPlayer(), Button.PrimaryFire))
            {
                Abort();
            }
            else if (RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) != selectionIndex)
            {
                if (ArrayContains(AllowedHeroes(EventPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]))
                {
                    selectionIndex = RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down);
                    PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, Color.White, camPos + camFacing, 75);
                }
                Abort();
            }
            else
            {
                _extendedGlobalCollection[1] = heroesSorted[selectionIndex];
                switchToHero();
                isInHeroSelect = null;
                Wait(0.1, WaitBehavior.IgnoreCondition);
                PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, Color.White, EyePosition(EventPlayer()) + FacingDirectionOf(EventPlayer()), 75);
            }
        }
        else if (Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) >= 0.22 && Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) <= 0.88 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) >= -1.75 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) <= -1.45)
        {
            isInHeroSelect = null;
            Wait(0.1, WaitBehavior.IgnoreCondition);
            PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, Color.White, EyePosition(EventPlayer()) + FacingDirectionOf(EventPlayer()), 75);
        }
        else if (Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) >= -0.88 && Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) <= 0.22 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) >= -1.75 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) <= -1.45)
        {
            _extendedGlobalCollection[1] = heroesSorted[selectionIndex];
            switchToHero();
            isInHeroSelect = null;
            Wait(0.1, WaitBehavior.IgnoreCondition);
            PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, Color.White, EyePosition(EventPlayer()) + FacingDirectionOf(EventPlayer()), 75);
        }
    }
    else if (Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) >= -3.5 && Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) <= 3.5 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) >= -1 - 7 / CountOf(heroesSorted) / 2 * 1.5 && Max(_objectVariable_6[cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), VerticalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_3[cursor], _objectVariable_7[cursor])) <= -1 + 7 / CountOf(heroesSorted) / 2 * 1.5 && ArrayContains(AllowedHeroes(EventPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]))
    {
        _extendedGlobalCollection[1] = heroesSorted[RoundToInteger((Max(_objectVariable_4[cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursor])), HorizontalAngleFromDirection(_objectVariable_1[cursor])) + _objectVariable_2[cursor], _objectVariable_5[cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)];
        switchToHero();
        isInHeroSelect = null;
        Wait(0.1, WaitBehavior.IgnoreCondition);
        PlayEffect(EventPlayer(), PlayEffect.BuffImpactSound, Color.White, EyePosition(EventPlayer()) + FacingDirectionOf(EventPlayer()), 75);
    }
}

rule: "[HeroSelectAnywhere.del] Deselect disallowed hero"
Event.OngoingPlayer
if (!liteMode == true)
if (isInHeroSelect == true)
if (!ArrayContains(AllowedHeroes(EventPlayer()), heroesSorted[selectionIndex]) == true)
{
    AbortIf(IsDummyBot());
    selectionIndex = HeroOf(EventPlayer()) == null ? RandomValueInArray(MappedArray(AllowedHeroes(EventPlayer()), ArrayContains(AllowedHeroes(EventPlayer()), ArrayElement()))) : IndexOfArrayValue(heroesSorted, HeroOf(EventPlayer()));
}

void setupHeroArrays() "[HeroSelectAnywhere.del] (Subroutine) Define hero arrays                              <====== [Change hero roles here]"
{
    # Edit these arrays to move heroes between roles
    TankHeroes = AllTankHeroes();
    DamageHeroes = AllDamageHeroes();
    SupportHeroes = AllSupportHeroes();
    # Example: moving Doomfist/Mei to tank, Roadhog/Zenyatta to damage, and Sombra/Symmetra to support
    if (1 == 0)
    {
        # Tank
        TankHeroes = AllTankHeroes();
        TankHeroes = RemoveFromArray(TankHeroes, Hero.Roadhog);
        TankHeroes = Append(TankHeroes, [Hero.Doomfist, Hero.Mei]);
        # Damage
        DamageHeroes = AllDamageHeroes();
        DamageHeroes = RemoveFromArray(DamageHeroes, [Hero.Doomfist, Hero.Mei, Hero.Sombra, Hero.Symmetra]);
        DamageHeroes = Append(DamageHeroes, [Hero.Roadhog, Hero.Zenyatta]);
        # Support
        SupportHeroes = AllSupportHeroes();
        SupportHeroes = RemoveFromArray(SupportHeroes, Hero.Zenyatta);
        SupportHeroes = Append(SupportHeroes, [Hero.Sombra, Hero.Symmetra]);
    }
}

void sortAlphabetically() "[StringSorting.del] (Subroutine) Sort array alphabetically"
{
    _extendedGlobalCollection[4] = [];
    while (CountOf(_extendedGlobalCollection[2]) > 1)
    {
        _extendedGlobalCollection[5] = _extendedGlobalCollection[2][0];
        ModifyVariable(_extendedGlobalCollection[2], Operation.RemoveFromArrayByIndex, 0);
        _extendedGlobalCollection[6] = 0;
        while (_extendedGlobalCollection[6] < CountOf(_extendedGlobalCollection[2]))
        {
            _arrayBuilder = _extendedGlobalCollection[9];
            _arrayBuilder[CountOf(_extendedGlobalCollection[9]) - 1] = <"<0>", _extendedGlobalCollection[2][_extendedGlobalCollection[6]]>;
            _extendedGlobalCollection[9] = _arrayBuilder;
            _arrayBuilder = _extendedGlobalCollection[10];
            _arrayBuilder[CountOf(_extendedGlobalCollection[10]) - 1] = <"<0>", _extendedGlobalCollection[5]>;
            _extendedGlobalCollection[10] = _arrayBuilder;
            while (true)
            {
                Skip(_extendedGlobalCollection[7]);
                if (LastOf(_extendedGlobalCollection[9]) == LastOf(_extendedGlobalCollection[10]))
                {
                    _extendedGlobalCollection[8] = 0;
                    Skip(18);
                }
                else if (StringLength(LastOf(_extendedGlobalCollection[9])) == 0)
                {
                    _extendedGlobalCollection[8] = -1;
                    Skip(15);
                }
                else if (StringLength(LastOf(_extendedGlobalCollection[10])) == 0)
                {
                    _extendedGlobalCollection[8] = 1;
                    Skip(12);
                }
                else if ((StringContains("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[9]), 0)) ? IndexOfStringChar("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[9]), 0)) : StringLength("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz")) > (StringContains("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[10]), 0)) ? IndexOfStringChar("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[10]), 0)) : StringLength("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz")))
                {
                    _extendedGlobalCollection[8] = 1;
                    Skip(9);
                }
                else if ((StringContains("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[9]), 0)) ? IndexOfStringChar("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[9]), 0)) : StringLength("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz")) < (StringContains("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[10]), 0)) ? IndexOfStringChar("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz", CharInString(LastOf(_extendedGlobalCollection[10]), 0)) : StringLength("0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoÖöPpQqRrSsTtUuÚúVvWwXxYyZz")))
                {
                    _extendedGlobalCollection[8] = -1;
                    Skip(6);
                }
                ModifyVariable(_extendedGlobalCollection[9], Operation.AppendToArray, StringSlice(LastOf(_extendedGlobalCollection[9]), 1, CountOf(LastOf(_extendedGlobalCollection[9])) - 1));
                ModifyVariable(_extendedGlobalCollection[10], Operation.AppendToArray, StringSlice(LastOf(_extendedGlobalCollection[10]), 1, CountOf(LastOf(_extendedGlobalCollection[10])) - 1));
                ModifyVariable(_func_recursiveContinue, Operation.AppendToArray, 20);
                Skip(6);
                _extendedGlobalCollection[8] = _extendedGlobalCollection[8];
                ModifyVariable(_extendedGlobalCollection[9], Operation.RemoveFromArrayByIndex, CountOf(_extendedGlobalCollection[9]) - 1);
                ModifyVariable(_extendedGlobalCollection[10], Operation.RemoveFromArrayByIndex, CountOf(_extendedGlobalCollection[10]) - 1);
                SkipIf(CountOf(_func_recursiveContinue) == 0, 3);
                _extendedGlobalCollection[7] = LastOf(_func_recursiveContinue);
                ModifyVariable(_func_recursiveContinue, Operation.RemoveFromArrayByIndex, CountOf(_func_recursiveContinue) - 1);
            }
            _extendedGlobalCollection[7] = 0;
            if (_extendedGlobalCollection[8] == -1)
            {
                _extendedGlobalCollection[11] = _extendedGlobalCollection[5];
                _extendedGlobalCollection[5] = _extendedGlobalCollection[2][_extendedGlobalCollection[6]];
                _arrayBuilder = _extendedGlobalCollection[2];
                _arrayBuilder[_extendedGlobalCollection[6]] = _extendedGlobalCollection[11];
                _extendedGlobalCollection[2] = _arrayBuilder;
            }
            _extendedGlobalCollection[6] += 1;
        }
        ModifyVariable(_extendedGlobalCollection[4], Operation.AppendToArray, _extendedGlobalCollection[5]);
        MinWait();
    }
    ModifyVariable(_extendedGlobalCollection[4], Operation.AppendToArray, _extendedGlobalCollection[2]);
    _extendedGlobalCollection[3] = _extendedGlobalCollection[4];
}

rule: "[HeroSelectAnywhere.del] Main setup"
{
    setupHeroArrays();
    DisableInspectorRecording();
    _extendedGlobalCollection[2] = TankHeroes;
    sortAlphabetically();
    ModifyVariable(heroesSorted, Operation.AppendToArray, _extendedGlobalCollection[3]);
    _extendedGlobalCollection[2] = DamageHeroes;
    sortAlphabetically();
    ModifyVariable(heroesSorted, Operation.AppendToArray, _extendedGlobalCollection[3]);
    _extendedGlobalCollection[2] = SupportHeroes;
    sortAlphabetically();
    ModifyVariable(heroesSorted, Operation.AppendToArray, _extendedGlobalCollection[3]);
    MinWait();
    EnableInspectorRecording();
    CreateEffect(LocalPlayer(), Effect.Orb, Color.Black, <Vector>(true * camPos + -0.3 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + [] * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 0.8 * camFacing), 0, EffectRev.VisibleTo);
    CreateEffect(LocalPlayer(), Effect.Orb, Color.Black, <Vector>(true * camPos + 0.3 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + [] * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 0.8 * camFacing), 0, EffectRev.VisibleTo);
    _extendedGlobalCollection[12] = 0;
    while (_extendedGlobalCollection[12] < CountOf(heroesSorted) / 4)
    {
        CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, <"<0><1>", <"<0>  <1>  <2>", EvaluateOnce(4 * _extendedGlobalCollection[12]) >= 0 && EvaluateOnce(4 * _extendedGlobalCollection[12]) <= CountOf(heroesSorted) - 1 ? ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12])]) ? HeroIconString(heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12])]) : IconString(Icon.No) : "", EvaluateOnce(4 * _extendedGlobalCollection[12] + 1) >= 0 && EvaluateOnce(4 * _extendedGlobalCollection[12] + 1) <= CountOf(heroesSorted) - 1 ? ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12] + 1)]) ? HeroIconString(heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12] + 1)]) : IconString(Icon.No) : "", EvaluateOnce(4 * _extendedGlobalCollection[12] + 2) >= 0 && EvaluateOnce(4 * _extendedGlobalCollection[12] + 2) <= CountOf(heroesSorted) - 1 ? ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12] + 2)]) ? HeroIconString(heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12] + 2)]) : IconString(Icon.No) : "">, <"<0>", EvaluateOnce(4 * _extendedGlobalCollection[12] + 3) >= 0 && EvaluateOnce(4 * _extendedGlobalCollection[12] + 3) <= CountOf(heroesSorted) - 1 ? ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12] + 3)]) ? HeroIconString(heroesSorted[EvaluateOnce(4 * _extendedGlobalCollection[12] + 3)]) : IconString(Icon.No) : "">>, UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (4 * _extendedGlobalCollection[12] + 1.5 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -120 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), (436.3 - 7.25 * CountOf(heroesSorted)) / 100, Clipping.DoNotClip, InworldTextRev.VisibleToAndString, Color.White, Spectators.VisibleNever);
        _extendedGlobalCollection[12] += 1;
    }
    if (true)
    {
        CreateHudText(AllPlayers(Team.All), null, null, LocalPlayer().isInHeroSelect ? liteMode ? "" : <"　　  <0>\n\n　　  <1>\n<2>", <"Hero Select Anywhere by Josbird <0>", AbilityIconString(Hero.Mercy, Button.Ultimate)>, <"To select hero: Press primary fire [<0>]", InputBindingString(Button.PrimaryFire)>, <"To exit: Hold reload [<0>] or press interact [<1>]", InputBindingString(Button.Reload), InputBindingString(Button.Interact)>> : <"Hold reload [<0>] to change hero", InputBindingString(Button.Reload)>, Location.Right, -9, Color.White, Color.White, Color.Yellow, HudTextRev.VisibleToAndString, Spectators.VisibleNever);
    }
    if (!liteMode)
    {
        if (true)
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, <"┌ ─ ┐\n│<0>│\n└ ─ ┘", ArrayContains([Hero.Doomfist, Hero.Ashe], heroesSorted[LocalPlayer().selectionIndex]) ? <"<0>", HeroIconString(heroesSorted[LocalPlayer().selectionIndex])> : <"<0> ", HeroIconString(heroesSorted[LocalPlayer().selectionIndex])>>, UpdateEveryFrame(true * camPos + [] * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -20 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 4, Clipping.DoNotClip, InworldTextRev.VisibleToAndString, Color.White, Spectators.VisibleNever);
        }
        if (true)
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "│\n│\n│", UpdateEveryFrame(true * camPos + -350 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -121 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "│\n│\n│", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (CountOf(TankHeroes) - 0.5 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -121 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "│\n│\n│", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (CountOf(TankHeroes) + CountOf(DamageHeroes) - 0.5 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -121 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "│\n│\n│", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (CountOf(heroesSorted) - 0.5 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -121 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
        }
        if (true)
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, <" 【<0>】TANK", AbilityIconString(Hero.Brigitte, Button.SecondaryFire)>, UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * ((CountOf(TankHeroes) - 1) / 2 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-1 + 7 / CountOf(heroesSorted) / 2 + 0.1 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, <" 【<0>】DAMAGE", IconString(Icon.Skull)>, UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (CountOf(TankHeroes) + CountOf(DamageHeroes) / 2 - 0.5 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-1 + 7 / CountOf(heroesSorted) / 2 + 0.1 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, <" 【<0>】SUPPORT", AbilityIconString(Hero.Baptiste, Button.Ability1)>, UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (CountOf(heroesSorted) - CountOf(SupportHeroes) / 2 - 0.5 + 0.5)) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-1 + 7 / CountOf(heroesSorted) / 2 + 0.1 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
        }
        if (true)
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "┌", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) + 0.5) - 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 + 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToPositionAndColor, Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) >= -3.5 && Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) <= 3.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) >= -1 - 7 / CountOf(heroesSorted) / 2 * 1.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) <= -1 + 7 / CountOf(heroesSorted) / 2 * 1.5 && RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) != LocalPlayer().selectionIndex && ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]) ? Color.White : null, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "┐", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) + 0.5) + 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 + 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToPositionAndColor, Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) >= -3.5 && Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) <= 3.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) >= -1 - 7 / CountOf(heroesSorted) / 2 * 1.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) <= -1 + 7 / CountOf(heroesSorted) / 2 * 1.5 && RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) != LocalPlayer().selectionIndex && ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]) ? Color.White : null, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "└", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) + 0.5) - 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 - 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToPositionAndColor, Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) >= -3.5 && Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) <= 3.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) >= -1 - 7 / CountOf(heroesSorted) / 2 * 1.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) <= -1 + 7 / CountOf(heroesSorted) / 2 * 1.5 && RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) != LocalPlayer().selectionIndex && ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]) ? Color.White : null, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "┘", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) + 0.5) + 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 - 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToPositionAndColor, Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) >= -3.5 && Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) <= 3.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) >= -1 - 7 / CountOf(heroesSorted) / 2 * 1.5 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) <= -1 + 7 / CountOf(heroesSorted) / 2 * 1.5 && RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down) != LocalPlayer().selectionIndex && ArrayContains(AllowedHeroes(LocalPlayer()), heroesSorted[RoundToInteger((Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) / (7 / CountOf(heroesSorted) / 2) + CountOf(heroesSorted)) / 2, Rounding.Down)]) ? Color.White : null, Spectators.VisibleNever);
        }
        if (true)
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "┌", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (LocalPlayer().selectionIndex + 0.5) - 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 + 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndPosition, CustomColor(255, 217, 0, 255), Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "┐", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (LocalPlayer().selectionIndex + 0.5) + 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 + 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndPosition, CustomColor(255, 217, 0, 255), Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "└", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (LocalPlayer().selectionIndex + 0.5) - 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 - 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndPosition, CustomColor(255, 217, 0, 255), Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "┘", UpdateEveryFrame(true * camPos + 100 * (-3.5 + 7 / CountOf(heroesSorted) * (LocalPlayer().selectionIndex + 0.5) + 2 * 7 / CountOf(heroesSorted) / 2 / 2) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (-0.98 - 2 * 7 / CountOf(heroesSorted) / 2 / 2 - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndPosition, CustomColor(255, 217, 0, 255), Spectators.VisibleNever);
        }
        if (0 == 0)
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "▒▒▒▒▒", UpdateEveryFrame(true * camPos + -33 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -180 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 4, Clipping.DoNotClip, InworldTextRev.VisibleToAndColor, Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) >= -0.88 && Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) <= 0.22 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) >= -1.75 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) <= -1.45 ? CustomColor(207, 124, 0, 255) : CustomColor(255, 153, 0, 255), Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "CONTINUE", UpdateEveryFrame(true * camPos + -33 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -181 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 3, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "▒▒▒", UpdateEveryFrame(true * camPos + 55 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -180 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 4, Clipping.DoNotClip, InworldTextRev.VisibleToAndColor, Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) >= 0.22 && Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) <= 0.88 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) >= -1.75 && Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) <= -1.45 ? CustomColor(0, 125, 197, 255) : CustomColor(0, 162, 255, 255), Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "CANCEL", UpdateEveryFrame(true * camPos + 55 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -180 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2.5, Clipping.DoNotClip, InworldTextRev.VisibleTo, Color.White, Spectators.VisibleNever);
        }
        else
        {
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "CONTINUE", UpdateEveryFrame(true * camPos + -33 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -181 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 3, Clipping.DoNotClip, InworldTextRev.VisibleTo, CustomColor(255, 153, 0, 255), Spectators.VisibleNever);
            CreateInWorldText(LocalPlayer().isInHeroSelect ? LocalPlayer() : null, "CANCEL", UpdateEveryFrame(true * camPos + 55 * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + -180 * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 2.5, Clipping.DoNotClip, InworldTextRev.VisibleTo, CustomColor(0, 162, 255, 255), Spectators.VisibleNever);
        }
    }
    CreateInWorldText(LocalPlayer().cursor != null ? LocalPlayer() : null, "▲", UpdateEveryFrame(true * camPos + 100 * Max(_objectVariable_4[LocalPlayer().cursor], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), HorizontalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_2[LocalPlayer().cursor], _objectVariable_5[LocalPlayer().cursor])) * CrossProduct(camFacing, DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90)) + 100 * (Max(_objectVariable_6[LocalPlayer().cursor], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[LocalPlayer().cursor])), VerticalAngleFromDirection(_objectVariable_1[LocalPlayer().cursor])) + _objectVariable_3[LocalPlayer().cursor], _objectVariable_7[LocalPlayer().cursor])) - 0.2) * DirectionFromAngles(HorizontalAngleFromDirection(camFacing), VerticalAngleFromDirection(camFacing) - 90) + 300 * camFacing), 3.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndPosition, Color.White, Spectators.VisibleNever);
}

rule: "[Cursor.del] Cursor bounds"
if (AllCursors != [])
if (IsTrueForAny(AllCursors, !(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), HorizontalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_2[ArrayElement()] >= _objectVariable_4[ArrayElement()] && AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), HorizontalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_2[ArrayElement()] <= _objectVariable_5[ArrayElement()]) || !(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), VerticalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_3[ArrayElement()] >= _objectVariable_6[ArrayElement()] && AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), VerticalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_3[ArrayElement()] <= _objectVariable_7[ArrayElement()])) == true)
{
    cursorsToUpdate = FilteredArray(AllCursors, !(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), HorizontalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_2[ArrayElement()] >= _objectVariable_4[ArrayElement()] && AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), HorizontalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_2[ArrayElement()] <= _objectVariable_5[ArrayElement()]) || !(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), VerticalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_3[ArrayElement()] >= _objectVariable_6[ArrayElement()] && AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[ArrayElement()])), VerticalAngleFromDirection(_objectVariable_1[ArrayElement()])) + _objectVariable_3[ArrayElement()] <= _objectVariable_7[ArrayElement()]));
    _extendedGlobalCollection[13] = 0;
    while (_extendedGlobalCollection[13] < CountOf(cursorsToUpdate))
    {
        _objectVariable_2[cursorsToUpdate[_extendedGlobalCollection[13]]] -= AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursorsToUpdate[_extendedGlobalCollection[13]]])), HorizontalAngleFromDirection(_objectVariable_1[cursorsToUpdate[_extendedGlobalCollection[13]]])) + _objectVariable_2[cursorsToUpdate[_extendedGlobalCollection[13]]] - Max(_objectVariable_4[cursorsToUpdate[_extendedGlobalCollection[13]]], Min(AngleDifference(HorizontalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursorsToUpdate[_extendedGlobalCollection[13]]])), HorizontalAngleFromDirection(_objectVariable_1[cursorsToUpdate[_extendedGlobalCollection[13]]])) + _objectVariable_2[cursorsToUpdate[_extendedGlobalCollection[13]]], _objectVariable_5[cursorsToUpdate[_extendedGlobalCollection[13]]]));
        _objectVariable_3[cursorsToUpdate[_extendedGlobalCollection[13]]] -= AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursorsToUpdate[_extendedGlobalCollection[13]]])), VerticalAngleFromDirection(_objectVariable_1[cursorsToUpdate[_extendedGlobalCollection[13]]])) + _objectVariable_3[cursorsToUpdate[_extendedGlobalCollection[13]]] - Max(_objectVariable_6[cursorsToUpdate[_extendedGlobalCollection[13]]], Min(AngleDifference(VerticalAngleFromDirection(FacingDirectionOf(_objectVariable_0[cursorsToUpdate[_extendedGlobalCollection[13]]])), VerticalAngleFromDirection(_objectVariable_1[cursorsToUpdate[_extendedGlobalCollection[13]]])) + _objectVariable_3[cursorsToUpdate[_extendedGlobalCollection[13]]], _objectVariable_7[cursorsToUpdate[_extendedGlobalCollection[13]]]));
        _extendedGlobalCollection[13] += 1;
    }
}

rule: "▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒a"
{
}