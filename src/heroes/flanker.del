playervar Number FlankerMoveSpeedID;

void FlankerSetup(Hero hero) playervar '[flanker.del] Subroutine: Setup' {
    InitialHeroSetup(hero);

    CustomModifications.StartModifyingMoveSpeed(EventPlayer(), 91.7090909);
    ModifyVariable(HeroMoveSpeedModifications, Operation.AppendToArray, MoveSpeedModification.LastMoveSpeedModificationID);

    async! FlankerCleanup(hero);
}

void FlankerCleanup(Hero hero) playervar '[flanker.del] Subroutine: Cleanup' {
    StoppedBeingHero();

    CleanupMoveSpeedMods();

    Wait();

    ModifyVariable(HeroActive, Operation.RemoveFromArrayByValue, hero);
}

/* ======================================================== */

rule: '[flanker.del] Initial Tracer'
Event.OngoingPlayer
Player.Tracer
{
    FlankerSetup(Hero.Tracer);
}

rule: '[flanker.del] Initial Genji'
Event.OngoingPlayer
Player.Genji
{
    FlankerSetup(Hero.Genji);
}

/* ======================================================== */

rule: '[flanker.del] Initial Tracer (Duplication)'
Event.OngoingPlayer
Player.Echo
if (HeroBeingDuplicated() == Hero.Tracer)
{
    FlankerSetup(Hero.Tracer);
}

rule: '[flanker.del] Initial Genji (Duplication)'
Event.OngoingPlayer
Player.Echo
if (HeroBeingDuplicated() == Hero.Genji)
{
    FlankerSetup(Hero.Genji);
}